<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAASUkqAAgAAAAAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCAA6AYADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD32iio5pPKjL4zjHB+
        tAElFco3j/SVZlKzZBwflpv/AAsDSP7s3/fBrb6vV/lZl7en/MdbWZd+INKsblre6vYoplAJRs5GeR2q
        1a3aXVvHMowJFDAZ7HpXl3jY58V3P+5H/wCgCnh6Kqz5ZE16rpx5keg/8JXoX/QTh/X/AAqSLxJo80cs
        kd/EyQrukIz8o6ZPFcHb+FbeW1gmN5KDLErkBBxkA461LcaLHo+j6hJHcSSmWIIQygdwa1dKg3yxk7kK
        pWtzNKx29v4k0i7uEt7e/iklc4VRnJP5VqZB714RHK8EqSxttdGDKfcV6tLrqpoc1+naAyIM9yPl/Uil
        iMN7Nrld7joYj2ifN0LcvifRYJpIpdRhWSNijrzwQcEdKll1/SYPL87ULePzEEiB3xlT0P0rxh3Z3eRz
        lmJYn1Jra1eTS53sftWuWFlKtjCnlTyANjb169K0q4WlTtzytcilXq1bqEbs9cjlSaJZI2DIwDKw6EHo
        afWLpF0jadaCKVJYvITZIhyrjaMMPYjmthDlc1wvyOtX6jqKKKQwooooAKKKKACiiigAooooAKKKKACi
        iigAooooAKKKKACiiigAooooA57xd4z0jwVpiXurSPiVtkUMK7pJT1O0EgcDqSQOnqK4X/hoXwp/0DNb
        /wC/MX/xysH9o3/XeGv926/nFXj3h2xh1PxNpOn3G7yLu9ggl2nB2vIqnB7HBr0KGGpypc8jOU3zWR7/
        AP8ADQvhT/oGa3/35i/+OUv/AA0L4U/6Bmt/9+Yv/jleRJpmhXdvdLHpk0Mi2dxMkgvC21o4XccEcjK4
        /GmWumaLFoWkXFzp8txcXdu80ji6KDInljAAA9IxWCqYP2ftdbXsek8qxirrDtLmavv0PYP+GhfCn/QM
        1v8A78xf/HKP+GhfCn/QM1v/AL8xf/HK8aTRdM/4TOWzNvMbFbAXQh847sm1Eu3fjONx9OlXbXSNFvZG
        jt9CkZlUuxOoFVVeBlmIAAyQMkjqPWnVnhKTSlfVXRFDLsVXjKUErRdndpHrH/DQvhT/AKBmt/8AfmL/
        AOOUf8NC+FP+gZrf/fmL/wCOV5bDouhf2vDYXOh3ELtMkTg3zZXcQM/d9DkVyuk6ZHf+KbTTZGdbeS7W
        ORh1WPd8zfgoJ/CrofVayk4X03M8VgsThXFVUve2tqe+f8NC+FP+gZrf/fmL/wCOUn/DQvhT/oGa3/35
        i/8AjleTJpmiywSTx+HrtoY8eZIt25VM9NxC4H41j+I9Nsra10++0+CSCG482F43lMmJIypJBIHG2ROP
        XNRQng60+SF7muKyzF4Wn7SqlbbdHuP/AA0L4UP/ADDNb/78xf8AxyvSNA17T/Eujw6rpk3m2swO0kYK
        kHBVgehBH+RzXxNX0r+z6c/D+7/7Ccn/AKLjrXE4aFOHNE8+E23Znq/evNV1nUD4nFkbk/Z/tfl7Nq/d
        3YxnGa9KrybcqeMtzMFUXxJZjgAb/WowkVLnur6GOJk1y27mDN/r5P8AfP8AOoz0NaM2lXgldisIVmLK
        TcxDIz1+9UR0y6wf+Pb/AMC4v/iq9VVIW3R5rhLsdxpeuRm6NgjEvbQw+YOeNyAjtjpXJeNLqNfE1w7t
        gFI8e/yCi2n8vxNqzo6MMWibkYMMiDB5HHUVzfi2bzPFt0WP/LOL/wBFrXn4ZJV3bt/kduIk3QTff/M2
        ln8SGKM2tvfGIoPLO7jbjjAz0xWuZNUTwFqL6n5qXXnHZ5vXZhcfhndW5pMRfS7DH/PtF/6AKPF0Bj8I
        3rHso/mKj2/PUUeVLU09jyQcrt6HmETXEunXVwJWzDJECc9m3j+YFas2uyN4Lt7MSt55nMbnPJRfmH/o
        Sj8Kf4Rs01K21eyc/LLFGM+hDEj9a5qOKSSdIAv71mCBT/eJxj8673yzm0/su/4HFrGKa+0rF6WS5trS
        0mZ93nqzgEdgxX+an86wfGqmfXLeQkAmwt+P+AV1niqAWk+nWw4ENmqfiGbJ/E81y3jAY1a1/wCwfbH/
        AMhivMzSfNh4yXVnuZDDlxcl5f5Ht/g58eFtFX00+3H/AJCWuxiPyj6VxHg8/wDFN6P/ANeFv/6LWu2h
        +4PpXJHZCqfGyWiiimQea698cPC/h3XbzSL211Vrm0kMcjRQoVJ9iXB/StLw38V/C/ilbkWM08dzbwtO
        1tcRhJGRQSSvJDcDoDXgfi3UtI0r40eILnW9H/tay891Nt5xiyxAwdw9Kh8KeTrnxMe+8PaU+m2EME07
        24naUQxiFg2XI6MTjHT5gOlAH0b4S+ImieMdKvtTshcWtrYnE8l6FjCjbuLZDEAAZySa5C6/aG8JwXzQ
        w2ep3VuDj7RHEqhuvIVmBx064rx7SNSew+CPiCBCw+3atbWzFfTY0hz7fu69Z8GfCrwpffCy2lvbaCW8
        1KzFw9+XJaBipK7Txt2Z5HQkHOcUAep6HrmneI9Jh1TSrlbi0mHyOAQcjggg8gg9jWP4z8f6F4GtIptW
        lkaWbPk20ChpJMdSASAAM9SR+JrO+FvgoeCfD9xbx60mqQXkouY5Ik2xgFQMr8xzkAc/SvP/AI+eE9Zv
        tW0zxBY2c19ZQ2/2eeGKMv5RV2fcwBztYNgkdNvJ5FAHY+FfjX4Y8UatFpey60+7nbZALtVCSt2UMCQG
        PQA4ycAZJApNd+OHhfw7rt5pF7a6q1zaSGORooUKk+xLg/pXjeg6t4K8QeLdKfUdLufDd8k0SJNpUqrb
        mRWG1nVxmPkDLAn1POTUPi3UtI0r40eILnW9H/taz891Nr5xiyxAwdw9KAPatD+OHhfxBq0em2drqqzP
        HLIDLCgUCONpD0c9kOPfFZ3/AA0V4Nx/x561/wCA8f8A8crjfBOv+CtZ1q5h0jwQNKvo9PupY7r7c8u3
        90ykbSMHIYivNfDWv6DpFrNHq/hSDWpHcMkkl28JjGMbcKOaAPpP/hc/hR/Dkut2xvbmGCSOO4gjhAlh
        3gkFlZgCuRtyCefbmuw8Oa9Z+J9BtNY0/wAz7LdKWQSABhhipBAJGQQR1r5w+F/g648WN4smj01rXS7z
        TZra2JJKLM0qSRIrN9/aYxk5zwM9av8AgHxsNE+Dfi+wlLJd2RIt1LhWBuB5YCg8/I4Zj9aAPQX+PnhR
        EnlWy1eSGGUQtMkEe0sd23H7zoQjEfSq/wDw0T4N/wCfPWf/AAHj/wDjleR3ugf2Z8A7XVJE2zapriOC
        Rg+UkUyr+u8/j+bNO8YeAbbS7SC8+Hgu7qKFEmuP7RdPNcKAz4A4ycnHvQB7rq/xn8NaLp2k31za6o0W
        qW5uIBHChKqDjDZcYOfTNVtK+PPgvVNQjtHe+sfMIVZryFVjBJAALKx29epwAAckV5V8W5NPS38CXNnp
        ywae+lJcJZeYWCoxD7Nx5PXGa5HVr3TfFl3ZWHhjwcmnXjuV2W9zJO0+RwMHgYwTnH5AUAfaAOelLVDQ
        7OfTtC0+xuZhNPbWsUMkoGA7KgBYD3Iq/QAUUUUAeDftHf67w1/u3X84q8n8Gf8AI+eHf+wpa/8Ao1a9
        Y/aO/wBd4a/3br+cVeUeDP8Ake/Dv/YUtf8A0atevQ/3b7zF/Gbum9Lr/sHXn/pLLSN/yLnhz/rwk/8A
        Su4osX+zy7pLeSSJ4pIZEBKkpIjI2Djg4Y4ODzjrTrlkeO1t7W3litrSHyYRId743s5LEAAks7HgDAwO
        1fMKrFYZ0ut7/gfpMsPN5nHEfZUbb9bsq3upQaV42+03MckkDabBC4iIDAPZRrkZ4JGc4PX1HWtWwtbP
        Ura6t7Kb+1bO5QLLbwN5N3HhgwYRkHJBH8O9cZ5HBFTyo38fOJraKfy9JRxHNEJF3LYoQSpBBwRmpHNn
        fQvb32mwwKSrR3Gn2ccU0Tg8EEAbgRkEZHY5459PEzor2fNdSsrNf5HzeBpYuca3skpQbd4vr6P/AIJM
        0niCNYG0G4s9TW1REjjk02D7ZGIwAoKlSXwABlS3A5x0rn/CQZtU1G/flraxndsjq0uIPzBmz+FdJDcP
        feKbG5EcozcwLmQ7nbbsXczYGXbbuY92JNZWkwtDourXGwlrvURAjAZO2MM7j85Ij+FKni+bD1XZXXVa
        XuVWy1U8bh4Xdpa2bvy2s2rmpaTyQ6h4X09Q2y9N5kjp+/X7Pz/u7N3tnNZGpp9o8HXHGXtLyKZf9lHV
        kc/99CEVpTa7a+H2i0i5fUtlxEk109vciNIhKgYYj2nf+7Kk5IznbxjNQXtjeWseuaVszIIZYpSBxiFx
        KxH/AH5NZU+anUoScbdPW/8Aw50VFSr0sZGM7u9+1rf1Y4SvpX9n3/kn93/2E5P/AEXFXzVX0r+z7/yT
        +7/7Ccn/AKLir2sd/C+Z8fT3PV64rU/CNm0s1w8k7vIxdgCAMnk+tdrUE8AkBHrXlwqShrF2NZQjL4lc
        8f1/w/PJ9jS0tpZIo4GTPXB86Q4P5g/jXOt4W1DP/HjL+Vei67rVpDq15plppGq6pdWcavd/YoFKwbl3
        KpLsuSV5wM8VSgfw9eGxMeq2SvfKr20MsqpLJu4ACNhs54xjrXXHFVIxXu3OaWEhJ3uYvh/RbiyhuBPA
        8ReWLaG74EmcfmPzropNGnmae7ij0+Z/OjjCXMQwq7VBy2ck85A+n0rOuPFfhXSXhVdWsrsyrKR9luoW
        C7Iy+GJcAbsbVz1YgcVs6V4z0DUvE58MQQvNcSkeY/mQmPeIg5GPM3MV2bTtUgMpB6GsKnPOTnZo6aSV
        OKitfUsR2viJbyOKFdPSNQQYw3KLn5CB9Bg9eenHNXFg1rUbC08+fTCkqYuI0XehO8n5SSecBVPJGWJ7
        Veh1zwvNFcajDq+lSxWiCOe4S6jZYVY4AdgcLkjjPWs+y1/w/L4d1XUrKAy2GhSzPuiKOJGSISl4yGIb
        IfgkjnNYqD31NnVb05UZ0dnqlnBO/wBm0W1Yssb+QdvlfKDliTydxIAwO3XNV/7H1OC5lllsNMxC2Vly
        A7tk43McBScocgddw9BV608YaJJefZ9S0m+0Rb+L7UlxqSxxxTBWUffVyAcuvXHJHcgHYfXPC2oeRbHW
        dJmN64aGMXcZM5ztG0Z+bldvHcEVTjJPdi9qrfCvuObutK1WeTzZLHTZXS3ZnidTI6nI2KMHkY3nPcjH
        HJplz4XGpWsFzNoenzXL2aDdIqkJJt+7z/CDwK3LrxV4WtfESae97ZtdeROLiVJ49tqsezcsp3ZTJwBk
        dVPTFa8+qaNpccsdxqNlapZrGJRLOieSG4Tdk/LnBxnrg0rNWT19QdR/ZVn3WjKum6eLa3hiWNY1jjVF
        ReigADA9h0rdjGFFYFn4u0S+8SHQ7O8hnufsiXavHKjI6tnCjDZLbcN0+6ynvXRAYpNNbkXuFFFFIDwT
        RvDsl7+0TrMupaM0+myGYh7m13wsdowcsNpr2G70ix0zw7qlvpen21qstvKTHawLGGbYRnCgZPQVtUUA
        fOHw98C6jr/wr8UaJPbz2N5LcxTWpuYmQF0GQOccHBXPOM5wcVjQa/8AE7QPC9z4JXR7xYV32/mfYXkl
        jRj8yI6/KQcnBweG4P3cfVFFAHnPwZ8G33hDwhINTDR3t9L57wH/AJYrgBVP+11J+oHauR+NVn4o0bxD
        pnizSLi9fTrcxu8SSM0UE6FsM0YOArKcE/UEjcAfdKTFAHyTqN/r/wAZvFVhbW+h2drcKCsk1tAVAUnJ
        eVzyQAOMnrkDlsVoeLItd0n4ua7q1l4YOqRtO6qt3pzzwsCByBjBPoc19TnmigD5u8OeKPFF1rSWkngT
        S9OiuYpYZLi10R4ZFUo2cNnjtWr8HPBUOs+CPEOkeI9LnijnuEKGaDZIh2EB4yw4YZ4P55BIr3yigD5+
        +FX/AAkHgLx3f+FtVtL1tMuZfLW4WF2hWYfckU9AHXAJ68pnG3jjviL4L1yy+IWs2el6ffzWV9cC4Qwx
        Hy28z58Hb8oCszAZ6YzX1lRQB418Z/Dk1r8KdE0XSbSe5FleQRKsERZiqwyruIGep6+5rzax8SeKrHTr
        WzX4caRMtvCkQln0B3kfaoG5m7scZJ9a+rqKAPmTxUuveI/+EB1G40KWCVEZJYLWydI4FS5Kqu3naNij
        j+lb/wAX/AN1o2t2PjDwhZPDMJR9ojsoySkoOVlCDPXkNgYyATncTXvlFAGN4V1xvEXhyz1KS0ms55UA
        mt5o2Ro5Bwww3JGc4PcYrZoooAKKKKAPBv2jv9d4a/3br+cVeHxSyQSpLC7xyowdHQkMrA5BBHIIr3D9
        o3/XeGv926/nFXjGk3o0zWLHUGiEq2tzHOYz/GEYNj8cY/GvZwv8BfMwn8R3Fx4a+JVrpst5Lql8Hhg+
        0S2Y1Vjcxxdd7Rbsgfr7Vk2g8cX3he98SW+rao+l2cgimk/tB8hjt6Luycb1ye2a70XHhtfEuu+Jn8R6
        Lc2WrRu8KyzSrfwOY2AjCqRsXJwS2RhQKfpXivwboiaJ4Vmubme0Fg1pfT200Zs3e4AMrPxubawGGz8o
        /GsfaStpG/y+8v5nCaN4S8ZazHHr1hO4urnzDbSSX4jubrYMP5eW3NgDBqzomleP9fsDfW+t3ttamUwp
        Le6q0Alk6bE3NknPH14rq/C95o9jY6bbXfiXw9f6Xp7zRXUWpJtuLb5zl7N1G5lfAIwe4HXgY1+mh+Of
        C+jWNl4h0/SJNHluY2g1aUxCSGSTckinBDPtA3DqTn2y/aSbaa072Ft1MS7tvH2n2erXV5qerW66TNHB
        dq+oOGRnxtwN3IOQQRxg5qnodj4qn0lrvR766gsmvo7RhFetEGnkwFyoI68ZP+FekatrugeLNG8SaTb+
        ILC13Cwt7e71GQx/ahDy0h4J5OR+ArE0O40nw54ek0mbX9MupU8Q2N15ltNlGiG0swyAcLg59MU1UfL8
        OvoHXc4298L+IZtX1yC/R3v9Kha4vzcTbm2DHzAk/NkFSPUEV0GpeFfH1lpFxNqGsOLRbRpZIH1jLNFs
        JI8stk5XIxjnpXSv4y0LV9F8ZG/u4V1iO2u7KzuGb/j+tnkLRjP8TLtwP9lh15w/xxqWm6zp0stjq/gu
        SNdNRP38Qa+LKnKo+3hsjC89TS9rUbSa/AdkjxWvpX9n3/kn93/2E5P/AEXFXzVX0r+z9/yT+7/7Ccn/
        AKLjq8d/C+ZFPc9XoooryDc4PyPEnhjXNbk0jQ11iy1Sf7ZGRdxwPBMUVGV9+NyEqDkcj3J45C68A+K7
        jxSbrUITqDX01ncXV5DdwQwxtEq7laMxF2AKkKVxkHnvn2uitY1XHZCseMah4G1uL4feGrCz0CObUba1
        u4LuKOWFCrSwSRhixYBsM4Y4J6VNc+ANavtZnxZR28NwHjNyXjPlhtM8gsQG3H96cYHXr05r2Cij28w5
        UeE6d8OPEcKrPLpLudNjt0htLq/gdbwRzpI6ptQBFIj48wk/Ng5ySOv0fw9rKeBPGtlPpEVjearNePZ2
        UUyMoWS3REUMDtHII5wBjsMV6RR2pyryluCjY8v1v4Zw3HhAxRRX+oaq8VtBsvdQaQRRiaJ5VQs21flQ
        9Oy4HXmt4m8F6xea9rttp+hWElprLW7war5qI+nGNQG+Xhydybhs7tk9xXrNFKNaa/r+uwWR4leeA/Ek
        tm+kQ6HbotvZ30A1NbqMG/eRgyM6feDYBHOQCW6Dmr15oPizVvEdz4ku/C8AMV1Y3EWlyXsTicRRzo2X
        BwHUyqwzgfWvX6KbryfQLHnnhbQtU07xbb6jceHLTT7efSvKlW0mRktZfPlk29dzEq65KjGc84xXodFF
        Zyk5O7GFFFFSAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAcD8UPh43jzTbP7
        LdpbX9izmFpQTG6vjcrY5H3VIOD0PHPHlH/DPni3/oI6J/3+l/8AjVfStFb08RUpx5YslwT3Pmv/AIZ8
        8W/9BHRP+/03/wAao/4Z88W/9BHRP+/03/xqvpSir+uVe/4C9nE+a/8Ahnzxb/0EdE/7/Tf/ABqj/hnz
        xb/0EdE/7/Tf/Gq+lKKPrlXv+AezifNX/DPni3/oI6J/3+m/+NUv/DPni3/oI6J/3+m/+NV9KUUfXKvf
        8A9nE+a/+GfPFv8A0EdE/wC/03/xqj/hnzxb/wBBHRP+/wBN/wDGq+lKKPrlXv8AgHs4nzX/AMM+eLM8
        6jogH/XaX/43XtvgHwhF4J8MR6Sk5uJTI008uMB5GwDgdgAAPwzXT0VnUxFSorSY1FLY/9k=
</value>
  </data>
</root>